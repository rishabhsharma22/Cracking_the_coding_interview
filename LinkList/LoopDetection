#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 26 00:27:35 2018

@author: rishabh
"""

"""
Program to find a loop in a linkedlist
"""


class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        
class LinkedList: 
  
    def __init__(self): 
        self.head = None
  
    def push(self, new_data): 
        new_node = Node(new_data) 
        new_node.next = self.head 
        self.head = new_node
        
    def detectAndRemoveLoop(self): 
  
        if self.head is None : 
            return
        if self.head.next is None : 
            return
  
        slow = self.head  
        fast = self.head 
  
        slow = slow.next
        fast = fast.next.next
  
        while (fast is not None): 
            if fast.next is None: 
                break 
            if slow == fast : 
                break
            slow = slow.next
            fast = fast.next.next
  
        if slow == fast : 
            slow = self.head 
            while (slow.next != fast.next): 
                slow = slow.next
                fast = fast.next
              
            fast.next = None
            
    def printList(self): 
        temp = self.head 
        while(temp): 
            print(temp.data, )
            temp = temp.next



llist = LinkedList() 
llist.head = Node(50) 
llist.head.next = Node(20) 
llist.head.next.next = Node(15) 
llist.head.next.next.next = Node(4) 
llist.head.next.next.next.next = Node(10) 

llist.head.next.next.next.next.next =  llist.head.next.next
  
llist.detectAndRemoveLoop()   

print("Linked List after removing loop")
llist.printList()  