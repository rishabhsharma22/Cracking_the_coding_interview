#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov 23 02:37:56 2018

@author: rishabh
"""

"""
Problem Statement: Find the Kth element from the last of the of a linked list.
"""

"""
Solution: Make two pointers and increase one of the by K values. Then move both the pointers
till first pointer reaches the end and the element at the position of the second pointer
will be the elem that we need.
"""


class Node:
    def __init__(self,data):
        self.data = data 
        self.next = None
        
        
class LinkedList:
    
    def __init__(self): 
        self.head = None
    
    def push(self, new_data): 
        new_node = Node(new_data) 
        new_node.next = self.head 
        self.head = new_node
        
    def printKthFromLast(self,k):
        first_ptr = self.head
        second_ptr = self.head
        
        count = 0
        if self.head is not None:
            while count<k:
                if first_ptr is None:
                    return None
                
                first_ptr = first_ptr.next
                count+=1
        
        
        while first_ptr is not None:
            second_ptr = second_ptr.next
            first_ptr = first_ptr.next
            
        return second_ptr.data


llist = LinkedList() 
llist.push(100) 
llist.push(23) 
llist.push(235) 
llist.push(322) 
  
print(llist.printKthFromLast(2))